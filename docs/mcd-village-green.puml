@startuml MCD_Village_Green

!define table(x) class x << (T,#FFAAAA) >>

'=====================
' ENTITÉS PRINCIPALES
'=====================

' Représente les catégories de produits, avec possibilité de sous-catégories (relation récursive)
table(Categorie) {
    +id : INT
    +nom : VARCHAR(100)
    +parent_id : INT
    +niveau : INT
}

' Représente les produits vendus par le site
table(Produit) {
    +id : INT
    +libelle_court : VARCHAR(100)      ' Nom court du produit
    +libelle_long : TEXT               ' Description détaillée
    +reference_fournisseur : VARCHAR(50) ' Référence chez le fournisseur
    +prix_achat_ht : DECIMAL(10,2)     ' Prix d’achat hors taxes
    +stock : INT                       ' Quantité disponible
    +photo : VARCHAR(255)             ' Chemin de l’image du produit
    +actif : BOOLEAN                  ' Produit actif ou non
    +categorie_id : INT               ' Référence à la catégorie
    +fournisseur_id : INT             ' Référence au fournisseur exclusif
}

' Représente les fournisseurs (constructeurs ou importateurs)
table(Fournisseur) {
    +id : INT
    +nom : VARCHAR(100)
    +contact : VARCHAR(100)
    +email : VARCHAR(100)
    +telephone : VARCHAR(20)
}

' Représente les utilisateurs du site (clients ou membres du staff)
table(Utilisateur) {
    +id : INT
    +nom : VARCHAR(100)
    +email : VARCHAR(100)
    +role : ENUM('Responsable Produits', 'Responsable Fournisseurs', 'Commercial Particuliers', 'Commercial Professionnels')
    +type_client : ENUM('particulier', 'professionnel') ' Indique le type de client
    +reference_client : VARCHAR(50)      ' Référence attribuée
    +coefficient : DECIMAL(3,2)          ' Coefficient de vente (clients pro)
}

' Représente les adresses liées à un utilisateur (facturation ou livraison)
table(Adresse) {
    +id : INT
    +utilisateur_id : INT
    +type_adresse : ENUM('facturation', 'livraison')
    +rue : VARCHAR(255)
    +code_postal : VARCHAR(10)
    +ville : VARCHAR(100)
    +pays : VARCHAR(100)
}

' Représente une commande passée par un utilisateur
table(Commande) {
    +id : INT
    +utilisateur_id : INT
    +date_commande : DATE
    +reduction : DECIMAL(5,2)
    +mode_paiement : ENUM('carte', 'virement', 'chèque')
    +statut_paiement : ENUM('payé', 'en attente')
    +adresse_facturation_id : INT
    +adresse_livraison_id : INT
}

' Représente un produit commandé (avec quantité et prix)
table(LigneCommande) {
    +id : INT
    +commande_id : INT
    +produit_id : INT
    +quantite : INT
    +prix_unitaire_ht : DECIMAL(10,2)
}

' Représente un document généré à partir d’une commande (facture ou bon de livraison)
table(Document) {
    +id : INT
    +commande_id : INT
    +type_document : ENUM('facture', 'bon_livraison')
    +date_creation : DATE
    +chemin_fichier : VARCHAR(255)
    +statut : ENUM('en_attente', 'validé', 'archivé')
}

'===========================
' RELATIONS AVEC COMMENTAIRES
'===========================

Categorie "1" -- "0..*" Categorie : contient
' Une catégorie peut avoir plusieurs sous-catégories.
' Chaque sous-catégorie a une seule catégorie parente.

Categorie "1" -- "0..*" Produit : classe
' Une catégorie regroupe plusieurs produits.
' Chaque produit appartient à une seule catégorie.

Produit "1" -- "1" Fournisseur : est fourni par
' Chaque produit est fourni exclusivement par un fournisseur.

Utilisateur "1" -- "0..*" Adresse : possède
' Un utilisateur peut avoir plusieurs adresses de facturation ou de livraison.

Utilisateur "1" -- "0..*" Commande : passe
' Un utilisateur peut passer plusieurs commandes.

Commande "1" -- "0..*" LigneCommande : contient
' Une commande contient plusieurs lignes (produits commandés).

LigneCommande "1" -- "1" Produit : concerne
' Une ligne commande un seul produit.
' Un produit peut apparaître dans plusieurs lignes.

Commande "1" -- "1" Adresse : utilise pour facturation
' Chaque commande a une adresse de facturation.

Commande "1" -- "1" Adresse : utilise pour livraison
' Chaque commande a une adresse de livraison.

Commande "1" -- "0..*" Document : génère
' Une commande peut générer plusieurs documents (facture, bon de livraison).

@enduml
